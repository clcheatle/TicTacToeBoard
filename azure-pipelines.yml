# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  Default

variables:
  solution: 'BoardCrud.sln'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: 5.0.x
- task: UseDotNet@2
  displayName: 'Install .NET Core Runtime'
  inputs:
    packageType: 'runtime'
    version: 2.x
- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: 'solution'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'TictactoeBoardSonarCloudServiceConnection'
    organization: 'clcheatle'
    scannerMode: 'MSBuild'
    projectKey: 'clcheatle_tictactoe'
    projectName: 'tictactoe'
    extraProperties:
      sonar.exclusions=**/Program.cs, **/Startup.cs

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(solution)'
    workingDirectory: 'BoardCrud'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'solution'
    arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'
    testRunTitle: 'Dotnet tests running'
    workingDirectory: 'BoardCrud'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coburtura/coverage.xml'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(solution)'
    zipAfterPublish: true